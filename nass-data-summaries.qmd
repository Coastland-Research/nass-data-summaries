---
title: "Nass Data Summary"
subtitle: "November 22, 2024"
format:
  html: 
    grid:
      sidebar-width: 200px
      body-width: 1050px
      margin-width: 50px
      gutter-width: 1.5em
editor: visual
editor_options: 
  chunk_output_type: console
---


```{r}
#| include: false

library(tidyverse)
library(reshape2)
library(ggpubr)
library(readxl)
library(data.table)
library(gridExtra)
library(RColorBrewer)
```


## Background
This resource document shows information on salmon escapement and harvest (Canadian and total exploitation) in the Nass watershed. We display escapement for Area 3 (Nass) overall, escapement by Conservation Unit and stream, and exploitation rates for each salmon species. TRTC for steelhead trout in the Nass watershed is also presented. We are also working to forecast sockeye returns for the Meziadin system specifically, and show preliminary results from forecast models here.

## Data Sources


## Summary


```{r}
#| warning: false
#| message: false
#| echo: false
#| fig-width: 7
#| fig-height: 4.5

salmon <- readRDS("salmon.rds")
exploitation <- readRDS("exploitation.rds")

# Exploitation plot    
ggplot(exploitation, aes(x = Year, y = Fish/100000, fill = Proportion)) + 
  geom_col(position = "stack") +
  scale_fill_brewer(palette = "Dark2")+
  labs(x = "Year", y = "x100,000 Salmon", title = "Area 3 Exploitation by Year")+
  facet_wrap(~`Species Name`) +
  theme(axis.text.x = element_text(angle = 45, hjust=1))+
  theme_minimal() 

```

## Escapement Goals

```{r}
#| message: false
#| echo: false
#| warning: false
#| fig-width: 7
#| fig-height: 4.5

esc_goals <- read_csv("data/nass salmon escapement goals.csv", show_col_types = FALSE)

esc_reshaped <- melt(esc_goals, id.vars = 'species')

ggplot(esc_reshaped, aes(x = species, y = value, fill=variable)) +
  geom_col(position='dodge') +
  scale_fill_brewer(palette = "Dark2")+
  ylab("Goal number") +
  xlab("Species")+
  theme_minimal()

```

Map showing the Nass watershed extent (figure taken from Peter Hall's CSAS paper on Skeena / Nass )

![Map](nass-map.png){width=400}

## Sockeye Salmon

```{r}
#| warning: false
#| message: false
#| echo: false

# Read in Meziadin/Nass TE/TR data ----------------------------------------

mez_nass_TR_TE <- read_csv("data/nass vs mez TR TE new.csv") %>%
  filter(type == "Total Return") %>%
  drop_na("Nass") %>%
  rename(runyear = year)

nass_TR_TE <- pivot_wider(mez_nass_TR_TE, names_from = type, values_from = c(Meziadin, Nass)) %>%
  subset(select = -c(`Meziadin_Total Return`, mez.p, non.mez))

# 2018-2023 data. Need to add returns from all streams for each year to get total Nass return
datanew <- read.csv("data/TRTC-Results--Nass-Sockeye_kke.csv") %>%
  subset(select = -c(CU, SpeciesId, T_Idx_E, ExpFactor1, ExpFactor2, AdjSum, ObsE,
                      ExpFactor3, TE, CDN.Harvest, CDN.ER, Q1, Q2, Q3, ER.Indicator,
                      ER.Indicator.Lookup, ER.Source, StatArea, TRTC, Total.Harvest,
                      Total.ER)) %>%
  filter(Year %in% c("2018", "2019", "2020", "2021", "2022", "2023")) %>%
  mutate(Total.Run = as.numeric(gsub(",","", Total.Run))) %>%
  group_by(Year) %>%
  summarise(`Nass_Total Return` = sum(Total.Run, na.rm = TRUE)) %>%
  rename(runyear = Year)

# 2024 data from DFO 2024 post-season review
runyear <- c(2024)
nass_return <- c(614751) 
# run size estimate to Gitwinksihlkw fishwheels
data24 <- data.frame(runyear, nass_return) %>%
  rename(`Nass_Total Return` = nass_return)

datanew <- bind_rows(datanew, data24)

# Combine old and new datasets
nass_TR <- bind_rows(nass_TR_TE, datanew)

# Plot Nass total returns by year (no age breakdown)
ggplot(nass_TR, aes(x = runyear, y = `Nass_Total Return`)) +
  geom_col(fill = "seagreen")+
  theme_minimal()+
  labs(x = "Run Year", y = "Total Return to Nass")+
  scale_x_continuous(breaks = round(seq(min(nass_TR$runyear), max(nass_TR$runyear), 
                                        by = 2),1))+
  theme(axis.text.x = element_text(angle = 60, vjust = 0.5))+
  ggtitle("Nass Total Sockeye Return by Year")

```

#### Area 3
```{r load and format data}
#| include: false
#| message: false
#| echo: false
#| warning: false

nass_mez <- fread("data/nass vs mez TR TE new.csv")
nass <- read_excel("data/nass data 240313.xlsx",sheet="meziadin and nass te and tr")
allyears<-fread("data/nass combined stat area data 240313.csv")

esc.plots <- allyears %>%
  filter(`Species Name`=="Sockeye")%>%
  pivot_longer(c(`Total Harvest`, `Escapement`), names_to = "Proportion", values_to = "Fish")%>%
  mutate(Type=ifelse(Year==2024,"Forecasted\nTRTC",Proportion))

```

```{r sockeye esc plot}
#| warning: false
#| message: false
#| echo: false

pe<-ggplot(esc.plots, aes(x = Year, y = Fish, fill = factor(Type,levels=c("Total Harvest","Escapement","Forecasted\nTRTC"))))+
  geom_col(color="black",width = 1)+
  scale_fill_manual(values=c("grey90","grey40","blue"))+
  guides(fill=guide_legend(title=""))+
  xlim(c(1980,2025))+
  theme_bw()+
  labs(y="Number of Sockeye Salmon")

pe
```

####  Annual Sockeye Escapement by Conservation Unit
```{r load CU data}
#| include: false
#| message: false
#| warning: false

CUs <- fread("data/NUSEDS escapement by CU 20220902.csv") %>%
  pivot_longer(`2021`:`1950`, names_to = "Year", values_to = "Escapement") %>%
  mutate(Year = as.numeric(Year))


area3 <- CUs %>%
  filter(AREA == "3B" | AREA == "3A") %>%
  filter(SPECIES=="Sockeye")
```

```{r plot annual escapement by CU}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = Escapement))+
    geom_col(fill = "grey60")+
    xlim(c(1980,2025))+
    theme_bw()+
    labs(y="Number of Sockeye Salmon", x = "Year",
         title = paste(CU))
  print(pl)
}

```
####  Annual Sockeye Escapement by CU and Stream
```{r plot annual escapement by CU and stream}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

nb.cols <- 20
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)

area3$WATERBODY  <- with(area3, reorder(WATERBODY, Escapement))

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = filtered_data$WATERBODY, size = Escapement, color = filtered_data$WATERBODY))+
    geom_point() +
    #geom_col(color = "black")+
    scale_color_manual(values = mycolors) +
    xlim(c(1980,2025))+
    theme_bw()+
    guides(color="none")+
    labs(y = NULL, x = "Year",
         title = paste(CU), fill = "Stream name")+
    theme(plot.title = element_text(size=10))+
    theme(axis.text.y = element_text(angle = 30, vjust = 0.5, hjust=1))
  print(pl)
}

```
####  Exploitation Rates
```{r sockeye er plot}
#| warning: false
#| message: false
#| echo: false

er.plots<-allyears %>%
  filter(`Species Name`== "Sockeye",Year<=2023)%>%
  pivot_longer(c(`SEAK ER`, `CDN ER`,`Total ER`), names_to = "Area", values_to = "ER")

per<-ggplot(er.plots, aes(x = Year, y = ER,color=Area)) +
  geom_point()+geom_line()+
  scale_color_manual(values=c("red","blue","black"))+
  guides(color=guide_legend(title=NULL))+
  theme_bw()+
  labs(y="Exploitation Rate")+
  ggtitle("Sockeye Exploitation Rates (1980-2023)")+
  ylim(0,1)+
  xlim(1980,2025)

per
```

### Meziadin Sockeye

The Meziadin River is a major tributary to the Nass River in northwestern British Columbia, an important area home to five species of Pacific salmon. Sockeye salmon returning to the Meziadin system comprise a significant proportion of the total Nass sockeye run. Since the creation of the Meziadin Fishway in 1966, it has been found that 70-80% of Nass sockeye return to the Meziadin system via the Meziadin River. Meziadin sockeye are a highly valued and culturally significant food source for Gitanyow and Nisga'a First Nations, and also harvested in Alaskan commercial fisheries during their ocean migration.

Predicting the sockeye returning to the Meziadin is important for understanding the conservation status of this population. We are working to create a Meziadin-specific return forecast for sockeye salmon using the ForecastR tool.

```{r}
#| include: false
#| 
library(tidyverse)

# Read in Meziadin/Nass TE/TR data:
mez_nass_TR_TE <- read_csv("data/nass vs mez TR TE new.csv") %>%
  filter(type == "Total Return") %>%
  drop_na("Meziadin") %>%
  rename(runyear = year)

# Wide format to have total run and escapement as columns
TR_TE_wide <- pivot_wider(mez_nass_TR_TE, names_from = type, values_from = c(Meziadin, Nass)) %>%
  subset(select = -c(`Nass_Total Return`, mez.p, non.mez))

# Read new data (to 2023)
datanew <- read.csv("data/TRTC-Results--Nass-Sockeye_kke.csv") %>%
  filter(CU_Name == "Meziadin") %>%
  subset(select = -c(CU, SpeciesId, T_Idx_E, ExpFactor1, ExpFactor2, AdjSum, ObsE,
                     ExpFactor3, TE, CDN.Harvest, CDN.ER, Q1, Q2, Q3, ER.Indicator,
                     ER.Indicator.Lookup, ER.Source, StatArea, TRTC, Total.Harvest,
                     Total.ER, CU_Name)) %>%
  filter(Year %in% c("2018", "2019", "2020", "2021", "2022", "2023")) %>%
  rename(runyear = Year, `Meziadin_Total Return` = Total.Run)%>%
  mutate(`Meziadin_Total Return` = as.numeric(gsub(",","",`Meziadin_Total Return`)))

# ADD 2024 DATA TO NEW DATA:
# Meziadin total return is the escapement (fishwheel count) plus harvest before the fishwheel
# (about 49%). So fishwheel + (fishwheel*.49)
runyear <- c(2024)
mez_return <- c(735996.1) 
# calculated as Esc / (1-ER) using Meziadin fishwheel count for Esc and 0.49 for ER 
data24 <- data.frame(runyear, mez_return) %>%
  rename(`Meziadin_Total Return` = mez_return)

datanew <- bind_rows(datanew, data24)
all_mezdata <- bind_rows(TR_TE_wide, datanew)


mez_age <- read_csv("data/Mez scale data - Andy.csv") %>%
  rename(runyear = Year)

# new data to 2022
mez_age_2 <- read_csv("data/Mez ages for Andy.csv") %>%
  filter(Year %in% c("2020", "2021", "2022")) %>%
  rename(runyear = Year) %>%
  #add row for 2023 and 2024 with age percentages using the mean from the last 5y (2018-2022, and 2019-2023)
  add_row(runyear = 2023, AgeComp = "MeziadinAnnual", RunAge3 = 0.1288244, RunAge4 = 0.4137336, RunAge5 = 0.3906876, RunAge6 = 0.06675444,
          RunAge7 = 0, Total = 1.00) %>%
  add_row(runyear = 2024, AgeComp = "MeziadinAnnual", RunAge3 = 0.1345893, RunAge4 = 0.4084802, RunAge5 = 0.3928252, RunAge6 = 0.06410532,
           RunAge7 = 0, Total = 1.00)

mez_age <- rbind(mez_age, mez_age_2)

# Merge the two dataframes 
age_mezdata <- merge(all_mezdata, mez_age, by = "runyear") %>%
  subset(select = -c(RunAge7, AgeComp)) %>%
  # add sockeye escapement for each age class (total * percent age)
  # add sockeye total return number for each age class
  mutate("3" = RunAge3*`Meziadin_Total Return`,
         "4" = RunAge4*`Meziadin_Total Return`,
         "5" = RunAge5*`Meziadin_Total Return`,
         "6" = RunAge6*`Meziadin_Total Return`) %>%
  # column name for percentages
  rename(p.age3 = RunAge3, p.age4 = RunAge4, p.age5 = RunAge5, p.age6 = RunAge6)

# Format for plotting
age_mezdata_long <- age_mezdata %>%
  pivot_longer(cols = "3":"6", names_to = "tr_ageclass", values_to = "tr_count") %>%
  rename(`Age Class` = tr_ageclass)


```

#### Total return of Meziadin sockeye by age class, 1982-2024

```{r}
#| echo: false
age_mezdata_long %>%
  ggplot(aes(x = runyear, y = tr_count, fill = `Age Class`)) +
  geom_col() +
  theme_minimal() +
  xlab("Year") +
  ylab("Sockeye Total Run by year and age class") +
  scale_x_continuous(breaks = round(seq(min(age_mezdata_long$runyear), max(age_mezdata_long$runyear), 
                                        by = 5),1)) +
  theme(axis.text.x = element_text(angle = 60, vjust = 0.5))
```

#### Using ForecastR to predict Sockeye Returns

We are using *ForecastR*, an R package and Shiny app, to predict total returns of sockeye salmon from the Meziadin system based on previous years' data on Meziadin total return and escapement. The Meziadin total return data is a subset of the Nass total return, including escapement plus the salmon harvested in fisheries which do not make it back to spawning grounds. The sockeye total run numbers for each year are categorized by age, with sockeye separated into age classes 3, 4, 5, and 6.

ForecastR uses forecasting models to predict salmon terminal run and escapement, based on data entered by the user. This data can be age-specific and include environmental or biological covariates. Multiple forecasting models can be explored, compared, and ranked using the app. Here we have started forecasting Meziadin sockeye total return using ages with no covariates, and intend to add relevant environmental and/or biological covariates to make these predictive models more informative in the future. Plots shown are using the naive model, which was found to be the best fit for ages classes .... assigns exponentially decreasing weights to past observations (i.e. more recent data points are more important for forecasting), and captures seasonal variation.

#### Total Return vs Predicted Return by year using Sibling Regression Model
```{r}
#| warning: false
#| message: false
#| echo: false
 
# Read in Meziadin/Nass TE/TR data:
mez_nass_TR_TE <- read_csv("data/nass vs mez TR TE new.csv") %>%
  filter(type == "Total Return") %>%
  drop_na("Meziadin") %>%
  rename(runyear = year)

# Wide format to have total run and escapement as columns
TR_TE_wide <- pivot_wider(mez_nass_TR_TE, names_from = type, values_from = c(Meziadin, Nass)) %>%
  subset(select = -c(`Nass_Total Return`, mez.p, non.mez))

# Read new data (to 2023)
datanew <- read.csv("data/TRTC-Results--Nass-Sockeye_kke.csv") %>%
  filter(CU_Name == "Meziadin") %>%
  subset(select = -c(CU, SpeciesId, T_Idx_E, ExpFactor1, ExpFactor2, AdjSum, ObsE,
                     ExpFactor3, TE, CDN.Harvest, CDN.ER, Q1, Q2, Q3, ER.Indicator,
                     ER.Indicator.Lookup, ER.Source, StatArea, TRTC, Total.Harvest,
                     Total.ER, CU_Name)) %>%
  filter(Year %in% c("2018", "2019", "2020", "2021", "2022", "2023")) %>%
  rename(runyear = Year, `Meziadin_Total Return` = Total.Run)%>%
  mutate(`Meziadin_Total Return` = as.numeric(gsub(",","",`Meziadin_Total Return`)))

# ADD 2024 DATA TO NEW DATA:
# Meziadin total return is the escapement (fishwheel count) plus harvest before the fishwheel
# (about 49%). So fishwheel + (fishwheel*.49)
runyear <- c(2024)
mez_return <- c(735996.1) 
# calculated as Esc / (1-ER) using Meziadin fishwheel count for Esc and 0.49 for ER 
data24 <- data.frame(runyear, mez_return) %>%
  rename(`Meziadin_Total Return` = mez_return)

datanew <- bind_rows(datanew, data24)

# Merge old and new data (without ages):
all_mezdata <- bind_rows(TR_TE_wide, datanew)

# Read in predicted returns
predictions <- read.csv("data/mez_predictions.csv")

predictions <- full_join(all_mezdata, predictions, by="runyear") %>%
  filter(!is.na(predicted.return)) %>%
  mutate(predicted.return = as.numeric(predicted.return),
         p25 = as.numeric(p25),
         p75 = as.numeric(p75)) 

###
sibreg <- ggplot(predictions, aes(x = runyear)) +
  geom_col(aes(y = `Meziadin_Total Return`, fill = "Actual Return"), color = "seagreen") +
  geom_point(aes(y = predicted.return, color = "Predicted Return (+/- 25% and 75% prob.)")) +
  geom_errorbar(
    aes(ymin = p25, ymax = p75, color = "Predicted Return (+/- 25% and 75% prob.)"),
    width = 0.2
  ) +
  theme_minimal() +
  labs(
    x = "Run Year",
    y = "Total Return to Meziadin"
  ) +
  scale_x_continuous(breaks = round(seq(min(predictions$runyear), max(predictions$runyear), by = 1), 1)) +
  scale_y_continuous(labels = scales::label_comma()) +
  scale_fill_manual(
    values = c("Actual Return" = "seagreen"),
    name = NULL  # Remove "fill" label
  ) +
  scale_color_manual(
    values = c("Predicted Return (+/- 25% and 75% prob.)" = "black"),
    name = NULL  # Remove "colour" label
  ) +
  ggtitle("Sibling Regression Model") +
  theme(
    axis.text.x = element_text(angle = 60, vjust = 0.5),
    axis.text.y = element_text(angle = 60),
    legend.position = "top"  # Move legend to the top
  )
print(sibreg)

```


#### Total Return vs Predicted Return by year using Naive Model
```{r}
#| warning: false
#| message: false
#| echo: false
predictions_naive <- read.csv("data/mez_predictions_naive.csv")

predictions_naive <- full_join(all_mezdata, predictions_naive, by="runyear") %>%
  filter(!is.na(predicted.return)) %>%
  mutate(predicted.return = as.numeric(predicted.return),
         p25 = as.numeric(p25),
         p75 = as.numeric(p75)) 


naive <- ggplot(predictions_naive, aes(x = runyear)) +
  geom_col(aes(y = `Meziadin_Total Return`, fill = "Actual Return"), color = "seagreen") +
  geom_point(aes(y = predicted.return, color = "Predicted Return (+/- 25% and 75% prob.)")) +
  geom_errorbar(
    aes(ymin = p25, ymax = p75, color = "Predicted Return (+/- 25% and 75% prob.)"),
    width = 0.2
  ) +
  theme_minimal() +
  labs(
    x = "Run Year",
    y = "Total Return to Meziadin"
  ) +
  scale_x_continuous(breaks = round(seq(min(predictions$runyear), max(predictions$runyear), by = 1), 1)) +
  scale_y_continuous(labels = scales::label_comma()) +
  scale_fill_manual(
    values = c("Actual Return" = "seagreen"),
    name = NULL  # Remove "fill" label
  ) +
  scale_color_manual(
    values = c("Predicted Return (+/- 25% and 75% prob.)" = "black"),
    name = NULL  # Remove "colour" label
  ) +
  ggtitle("Naive Model") +
  theme(
    axis.text.x = element_text(angle = 60, vjust = 0.5),
    axis.text.y = element_text(angle = 60),
    legend.position = "top" 
  )


print(naive)
```


#### Observed vs fitted return numbers using Naive model for Age Class 3

Age 3 sockeye must be predicted using the naive model (forecast based on avg of the 5 previous years) because there is no younger age class to relate it to in a sibling regression.

![Age 3 sockeye forecasted returns](age3n.png)

#### Plot of observed vs fitted return numbers using naive model for Age Class 4

![Age 4 sockeye forecasted returns](age4n.png)

#### Observed vs fitted return numbers using naive model for Age Class 5

![Age 5 sockeye forecasted returns](age5n.png)

#### Observed vs fitted return numbers using naive model for Age Class 6

![Age 6 sockeye forecasted returns](age6n.png)

#### Forecast plot showing the distribution of forecasted return estimates by age

![Variation in forecast abundance by age class](forecastn.png)

## Chinook Salmon
#### Area 3
```{r chinook esc plot}
#| message: false
#| echo: false
#| warning: false

esc.plots <- allyears %>%
  filter(`Species Name`== "Chinook")%>%
  pivot_longer(c(`Total Harvest`, `Escapement`), names_to = "Proportion", values_to = "Fish")%>%
  mutate(Type=ifelse(Year==2024,"Forecasted\nTRTC",Proportion))

pe<-ggplot(esc.plots, aes(x = Year, y = Fish, fill = factor(Type,levels=c("Total Harvest","Escapement","Forecasted\nTRTC"))))+
  geom_col(color="black",width = 1)+
  scale_fill_manual(values=c("grey90","grey40","blue"))+
  guides(fill=guide_legend(title=""))+
  xlim(c(1980,2025))+
  theme_bw()+
  labs(y="Number of Chinook Salmon")

pe

```

####  Annual Chinook Escapement by Conservation Unit
```{r load CU data chinook}
#| include: false
#| message: false
#| warning: false

CUs <- fread("data/NUSEDS escapement by CU 20220902.csv") %>%
  pivot_longer(`2021`:`1950`, names_to = "Year", values_to = "Escapement") %>%
  mutate(Year = as.numeric(Year))


area3 <- CUs %>%
  filter(AREA == "3B" | AREA == "3A") %>%
  filter(SPECIES=="Chinook")
```

```{r plot annual escapement by CU chinook}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = Escapement))+
    geom_col(color = "black", fill = "grey90")+
    xlim(c(1980,2025))+
    theme_bw()+
    labs(y="Number of Chinook", x = "Year",
         title = paste(CU))
  print(pl)
}

```
####  Annual Chinook Escapement by CU and Stream
```{r plot chinook annual escapement by CU and stream}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

nb.cols <- 20
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = filtered_data$WATERBODY, size = Escapement, color = filtered_data$WATERBODY))+
    geom_point() +
    scale_color_manual(values = mycolors) +
    xlim(c(1980,2025))+
    theme_bw()+
    guides(color="none")+
    labs(y=NULL, x = "Year",
         title = paste(CU), fill = "Stream name")+
    theme(plot.title = element_text(size=10))+
        theme(axis.text.y = element_text(angle = 30, vjust = 0.5, hjust=1))

  print(pl)
}

```
####  Exploitation Rates
```{r chinook er plot}
#| warning: false
#| message: false
#| echo: false

er.plots<-allyears %>%
  filter(`Species Name`== "Chinook",Year<=2023)%>%
  pivot_longer(c(`SEAK ER`, `CDN ER`,`Total ER`), names_to = "Area", values_to = "ER")

per<-ggplot(er.plots, aes(x = Year, y = ER,color=Area)) +
  geom_point()+geom_line()+
  scale_color_manual(values=c("red","blue","black"))+
  guides(color=guide_legend(title=NULL))+
  theme_bw()+
  labs(y="Exploitation Rate")+
  ggtitle("Chinook Exploitation Rates (1980-2023)")+
  ylim(0,1)+
  xlim(1980,2025)

per
```
## Coho Salmon
####  Area 3
```{r coho esc plot}
#| message: false
#| echo: false
#| warning: false

esc.plots <- allyears %>%
  filter(`Species Name`== "Coho")%>%
  pivot_longer(c(`Total Harvest`, `Escapement`), names_to = "Proportion", values_to = "Fish")%>%
  mutate(Type=ifelse(Year==2024,"Forecasted\nTRTC",Proportion))

pe<-ggplot(esc.plots, aes(x = Year, y = Fish, fill = factor(Type,levels=c("Total Harvest","Escapement","Forecasted\nTRTC"))))+
  geom_col(color="black",width = 1)+
  scale_fill_manual(values=c("grey90","grey40","blue"))+
  guides(fill=guide_legend(title=""))+
  xlim(c(1980,2025))+
  theme_bw()+
  labs(y="Number of Coho Salmon")

pe

```
####  Annual Coho Escapement by Conservation Unit
```{r load CU data coho}
#| include: false
#| message: false
#| warning: false

CUs <- fread("data/NUSEDS escapement by CU 20220902.csv") %>%
  pivot_longer(`2021`:`1950`, names_to = "Year", values_to = "Escapement") %>%
  mutate(Year = as.numeric(Year))


area3 <- CUs %>%
  filter(AREA == "3B" | AREA == "3A") %>%
  filter(SPECIES=="Coho")
```

```{r plot annual escapement by CU coho}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = Escapement))+
    geom_col(color = "black", fill = "grey90")+
    xlim(c(1980,2025))+
    theme_bw()+
    labs(y="Number of Coho", x = "Year",
         title = paste(CU))
  print(pl)
}

```
####  Annual Coho Escapement by CU and Stream
```{r plot coho annual escapement by CU and stream}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

nb.cols <- 33
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = filtered_data$WATERBODY, size = Escapement, color = filtered_data$WATERBODY))+
    geom_point() +
    scale_color_manual(values = mycolors) +
    xlim(c(1980,2025))+
    theme_bw()+
    guides(color="none")+
    labs(y=NULL, x = "Year",
         title = paste(CU), fill = "Stream name")+
    theme(plot.title = element_text(size=10)) +
        theme(axis.text.y = element_text(angle = 30, vjust = 0.5, hjust=1))

  print(pl)
}
```
####  Exploitation Rates
```{r coho er plot}
#| warning: false
#| message: false
#| echo: false

er.plots<-allyears %>%
  filter(`Species Name`== "Coho",Year<=2023)%>%
  pivot_longer(c(`SEAK ER`, `CDN ER`,`Total ER`), names_to = "Area", values_to = "ER")

per<-ggplot(er.plots, aes(x = Year, y = ER,color=Area)) +
  geom_point()+geom_line()+
  scale_color_manual(values=c("red","blue","black"))+
  guides(color=guide_legend(title=NULL))+
  theme_bw()+
  labs(y="Exploitation Rate")+
  ggtitle("Coho Exploitation Rates (1980-2023)")+
  ylim(0,1)+
  xlim(1980,2025)

per
```
## Pink Salmon (even years)
####  Area 3
```{r pink even esc plot}
#| message: false
#| echo: false
#| warning: false

esc.plots <- allyears %>%
  filter(`Species Name`=="Pink (even years)")%>%
  pivot_longer(c(`Total Harvest`, `Escapement`), names_to = "Proportion", values_to = "Fish")%>%
  mutate(Type=ifelse(Year==2024,"Forecasted\nTRTC",Proportion))

pe<-ggplot(esc.plots, aes(x = Year, y = Fish, fill = factor(Type,levels=c("Total Harvest","Escapement","Forecasted\nTRTC"))))+
  geom_col(color="black",width = 1)+
  scale_fill_manual(values=c("grey90","grey20","blue"))+
  guides(fill=guide_legend(title=""))+
  xlim(c(1960,2025))+
  theme_bw()+
  labs(y="Number of Pink Salmon")

pe

```

####  Even-Year Pink Escapement by Conservation Unit
```{r load CU data pink}
#| include: false
#| message: false
#| warning: false

CUs <- fread("data/NUSEDS escapement by CU 20220902.csv") %>%
  pivot_longer(`2021`:`1950`, names_to = "Year", values_to = "Escapement") %>%
  mutate(Year = as.numeric(Year))


area3 <- CUs %>%
  filter(AREA == "3B" | AREA == "3A") %>%
  filter(SPECIES=="Pink") %>%
  filter(!is.na(Escapement))
```

```{r plot annual escapement by CU pink}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = Escapement))+
    geom_col(fill = "grey60")+
    xlim(c(1980,2025))+
    theme_bw()+
    labs(y="Number of Pink Salmon", x = "Year",
         title = paste(CU))
  print(pl)
}

```
####  Even-Year Pink Escapement by CU and Stream
```{r plot pink annual escapement by CU and stream}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 1

nb.cols <- 71
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)


for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = filtered_data$WATERBODY, size = Escapement, color = filtered_data$WATERBODY))+
    geom_point() +
    scale_color_manual(values = mycolors) +
    xlim(c(1980,2025))+
    theme_bw()+
    guides(color="none")+
    labs(y=NULL, x = "Year",
         title = paste(CU), fill = "Stream name")+
    theme(plot.title = element_text(size=10),
          axis.text.y = element_text(size=5)) +
        theme(axis.text.y = element_text(angle = 30, vjust = 0.5, hjust=1))

  print(pl)
}
```
####  Exploitation Rates
```{r pink er plot}
#| warning: false
#| message: false
#| echo: false

er.plots<-allyears %>%
  filter(`Species Name`== "Pink (even years)",Year<2024)%>%
  pivot_longer(c(`SEAK ER`, `CDN ER`,`Total ER`), names_to = "Area", values_to = "ER")

per<-ggplot(er.plots, aes(x = Year, y = ER,color=Area)) +
  geom_point()+geom_line()+
  scale_color_manual(values=c("red","blue","black"))+
  guides(color=guide_legend(title=NULL))+
  theme_bw()+
  labs(y="Exploitation Rate")+
  ggtitle("Pink Salmon (even-year) Exploitation Rates (1960-2024)")+
  ylim(0,1)+
  xlim(1960,2025)

per
```

## Pink Salmon (odd years)
####  Area 3
```{r pink odd esc plot}
#| message: false
#| echo: false
#| warning: false

esc.plots <- allyears %>%
  filter(`Species Name`=="Pink (odd years)")%>%
  pivot_longer(c(`Total Harvest`, `Escapement`), names_to = "Proportion", values_to = "Fish")%>%
  mutate(Type=ifelse(Year==2024,"Forecasted\nTRTC",Proportion))

pe<-ggplot(esc.plots, aes(x = Year, y = Fish, fill = factor(Type,levels=c("Total Harvest","Escapement","Forecasted\nTRTC"))))+
  geom_col(color="black",width = 1)+
  scale_fill_manual(values=c("grey90","grey20","blue"))+
  guides(fill=guide_legend(title=""))+
  xlim(c(1960,2025))+
  theme_bw()+
  labs(y="Number of Pink Salmon")

pe

```

####  Odd-Year Pink Escapement by Conservation Unit
```{r load CU data pink odd}
#| include: false
#| message: false
#| warning: false

CUs <- fread("data/NUSEDS escapement by CU 20220902.csv") %>%
  pivot_longer(`2021`:`1950`, names_to = "Year", values_to = "Escapement") %>%
  mutate(Year = as.numeric(Year))

area3 <- CUs %>%
  filter(AREA == "3B" | AREA == "3A") %>%
  filter(SPECIES=="Pink") %>%
  filter(!is.na(Escapement))
```

```{r plot annual escapement by CU pink odd}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = Escapement))+
    geom_col(fill = "grey60")+
    xlim(c(1980,2025))+
    theme_bw()+
    labs(y="Number of Pink Salmon", x = "Year",
         title = paste(CU))
  print(pl)
}

```
####  Odd-Year Pink Escapement by CU and Stream
```{r plot pink odd annual escapement by CU and stream}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 1

nb.cols <- 71
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = filtered_data$WATERBODY, size = Escapement, color = filtered_data$WATERBODY))+
    geom_point() +
    scale_color_manual(values = mycolors) +
    xlim(c(1980,2025))+
    theme_bw()+
    guides(color="none")+
    labs(y=NULL, x = "Year",
         title = paste(CU), fill = "Stream name")+
    theme(plot.title = element_text(size=10),
          axis.text.y = element_text(size=5)) +
        theme(axis.text.y = element_text(angle = 30, vjust = 0.5, hjust=1))

  print(pl)
}
```
####  Exploitation Rates
```{r pink odd er plot}
#| warning: false
#| message: false
#| echo: false

er.plots<-allyears %>%
  filter(`Species Name`== "Pink (odd years)",Year<2025)%>%
  pivot_longer(c(`SEAK ER`, `CDN ER`,`Total ER`), names_to = "Area", values_to = "ER")

per<-ggplot(er.plots, aes(x = Year, y = ER,color=Area)) +
  geom_point()+geom_line()+
  scale_color_manual(values=c("red","blue","black"))+
  guides(color=guide_legend(title=NULL))+
  theme_bw()+
  labs(y="Exploitation Rate")+
  ggtitle("Pink Salmon (odd-year) Exploitation Rates (1960-2025)")+
  ylim(0,1)+
  xlim(1960,2025)

per
```
## Chum Salmon
####  Area 3
```{r chum esc plot}
#| message: false
#| echo: false
#| warning: false

esc.plots <- allyears %>%
  filter(`Species Name`=="Chum")%>%
  pivot_longer(c(`Total Harvest`, `Escapement`), names_to = "Proportion", values_to = "Fish")%>%
  mutate(Type=ifelse(Year==2024,"Forecasted\nTRTC",Proportion))

pe<-ggplot(esc.plots, aes(x = Year, y = Fish, fill = factor(Type,levels=c("Total Harvest","Escapement","Forecasted\nTRTC"))))+
  geom_col(color="black",width = 1)+
  scale_fill_manual(values=c("grey90","grey40","blue"))+
  guides(fill=guide_legend(title=""))+
  xlim(c(1950,2025))+
  theme_bw()+
  labs(y="Number of Chum Salmon")

pe

```

####  Annual Chum Escapement by Conservation Unit
```{r load CU data chum}
#| include: false
#| message: false
#| warning: false

CUs <- fread("data/NUSEDS escapement by CU 20220902.csv") %>%
  pivot_longer(`2021`:`1950`, names_to = "Year", values_to = "Escapement") %>%
  mutate(Year = as.numeric(Year))

area3 <- CUs %>%
  filter(AREA == "3B" | AREA == "3A") %>%
  filter(SPECIES=="Chum")
```

```{r plot annual escapement by CU chum}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = Escapement))+
    geom_col(fill = "grey60")+
    xlim(c(1980,2025))+
    theme_bw()+
    labs(y="Number of Chum Salmon", x = "Year",
         title = paste(CU))
  print(pl)
}

```
####  Annual Chum Escapement by CU and Stream
```{r plot chum annual escapement by CU and stream}
#| warning: false
#| message: false
#| echo: false
#| layout-ncol: 2

nb.cols <- 20
mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(nb.cols)

for (i in 1:length(unique(area3$CU_NAME))){
  CU <- unique(area3$CU_NAME)[i]
  filtered_data <- area3 %>% filter(CU_NAME == CU)
  pl <- ggplot(filtered_data, aes(x = Year, y = filtered_data$WATERBODY, size = Escapement, color = filtered_data$WATERBODY))+
    geom_point() +
    scale_color_manual(values = mycolors) +
    xlim(c(1980,2025))+
    theme_bw()+
    guides(color="none")+
    labs(y=NULL, x = "Year",
         title = paste(CU), fill = "Stream name")+
    theme(plot.title = element_text(size=10)) +
        theme(axis.text.y = element_text(angle = 30, vjust = 0.5, hjust=1))

  print(pl)
}
```
####  Exploitation Rates
```{r chum er plot}
#| warning: false
#| message: false
#| echo: false

er.plots<-allyears %>%
  filter(`Species Name`== "Chum",Year<=2023)%>%
  pivot_longer(c(`SEAK ER`, `CDN ER`,`Total ER`), names_to = "Area", values_to = "ER")

per<-ggplot(er.plots, aes(x = Year, y = ER,color=Area)) +
  geom_point()+geom_line()+
  scale_color_manual(values=c("red","blue","black"))+
  guides(color=guide_legend(title=NULL))+
  theme_bw()+
  labs(y="Exploitation Rate")+
  ggtitle("Chum Exploitation Rates (1980-2023)")+
  ylim(0,1)+
  xlim(1980,2025)

per
```
## Steelhead Trout
####  Area 3
```{r load steelhead data}
#| include: false

nisgaash <- read_csv("data/nisgaa-tech-table-data.csv")%>%
  filter(Species == "Steelhead")%>%
  select(Year,TRTC, TR)%>%
  mutate(`SEAK Harvest`=TR-TRTC)%>%
  pivot_longer(c(`TRTC`,`SEAK Harvest`),names_to="type",values_to="fish")

```

```{r steelhead esc plot}
#| message: false
#| echo: false
#| warning: false

sh<-ggplot(nisgaash, aes(x = Year, y = fish,fill=ifelse(Year==2023,"Forecasted\nTRTC",type))) +
  geom_col(color="black")+
  scale_fill_manual(values=c("blue","grey90","grey40"))+
  guides(fill=guide_legend(title=NULL))+
  theme_bw()+
  labs(y="Number of Steelhead")+
  xlim(1990,2025)

sh

```

####  Conservation Units

####  Streams

####  Exploitation Rates

```{r steelhead er plot}
#| message: false
#| echo: false
#| warning: false
# nisgaash <- read_csv("data/nisgaa-tech-table-data.csv")
# 
# nisgaash <- nisgaash %>%
#   filter(Species == "Steelhead") %>%
#   mutate(CDN_ER = CDN_Harvest/TR,
#          ALL_ER = ALL_Harvest/TR) %>%
#   pivot_longer(c(CDN_ER, ALL_ER), names_to = "ER_type", values_to = "ER")
# 
# per<-ggplot(nisgaash, aes(x = Year, y = ER,color = ER_type)) +
#   geom_point()+geom_line()+
#   scale_color_manual(values=c("red","black"))+
#   guides(color=guide_legend(title=NULL))+
#   theme_bw()+
#   labs(y="Exploitation Rate")+
#   ggtitle("Steelhead Exploitation Rates (1980-2023)")+
#   ylim(0,1)+
#   xlim(1980,2025)
# 
# per

```
# References

Nisga'a Lisims Government. 2023. 2023 Nass River Salmon Stock Assessment Update - Friday, 14 July. Public update from the Nisga'a Lisims Government Fisheries and Wildlife Department.

Pacific Salmon Foundation. 2016. The Nass Area: Cumulative Pressures on Salmon Habitat (summary report cards), Vancouver, BC.

Vélez-Espino, L.A., Parken, C.K., Clemons, E.R., Peterson, R., Ryding, K., Folkes, M., and Pestal, G. 2019. ForecastR: tools to automate procedures for forecasting of salmonid terminal run and escapement. Final Report submitted to the Southern Boundary Restoration and Enhancement Fund, Pacific Salmon Commission, Vancouver BC. 117 p.

